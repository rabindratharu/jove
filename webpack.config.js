/**
 * Webpack configuration file.
 *
 * @author    Justin Tadlock <justintadlock@gmail.com>
 * @copyright Copyright (c) 2023-2024, Justin Tadlock
 * @license   GPL-3.0-or-later
 */

// WordPress webpack config.
const defaultConfig = require("@wordpress/scripts/config/webpack.config");

// Plugins.
const RemoveEmptyScriptsPlugin = require("webpack-remove-empty-scripts");
const CopyPlugin = require("copy-webpack-plugin");
const RtlCssPlugin = require("rtlcss-webpack-plugin");
const CssMinimizerPlugin = require("css-minimizer-webpack-plugin");

// Utilities.
const path = require("path");
const { globSync } = require("glob");

/**
 * Exports the custom webpack config.
 *
 * @since 1.0.0
 */
module.exports = {
	// Includes the default webpack config from WordPress.
	...defaultConfig,
	...{
		entry: {
			"js/public": path.resolve(
				process.cwd(),
				"resources/js",
				"public.js",
			),
			"js/search": path.resolve(
				process.cwd(),
				"resources/js",
				"search.js",
			),
			"css/public": path.resolve(
				process.cwd(),
				"resources/css",
				"public.css",
			),
			"css/search": path.resolve(
				process.cwd(),
				"resources/css",
				"search.css",
			),
			"blocks/hero/hero": path.resolve(
				process.cwd(),
				"resources/blocks/hero",
				"style.css",
			),
			"blocks/cta/cta": path.resolve(
				process.cwd(),
				"resources/blocks/cta",
				"style.css",
			),
		},
		optimization: {
			...defaultConfig.optimization,
			minimizer: [
				...defaultConfig.optimization.minimizer,
				new CssMinimizerPlugin(),
			],
		},
		plugins: [
			// Very important! Include WP's plugin config or the
			// world will cease to exist as we know it. This also
			// removes the RTL handling for the moment, but it
			// should be re-added at a later date.
			...defaultConfig.plugins.filter(
				(filter) => !(filter instanceof RtlCssPlugin),
			),

			// Removes the empty `.js` files generated by webpack.
			// For this to work correctly, it needs to run after
			// WP has generated its the `*.asset.php` files. This is
			// what `STAGE_AFTER_PROCESS_PLUGINS` allows.
			new RemoveEmptyScriptsPlugin({
				stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS,
			}),

			// Copies any assets that don't need to be processed to
			// the output folder.
			new CopyPlugin({
				patterns: [
					{
						from: "./resources/fonts",
						to: "./fonts",
					},
					{
						from: "./resources/media",
						to: "./media",
					},
				],
			}),
			// Add RtlCssPlugin to generate RTL stylesheets.
			new RtlCssPlugin({
				// Customize the suffix for the RTL stylesheets.
				filename: "[name]-rtl.css",
			}),
		],
	},
	performance: {
		maxAssetSize: 512000,
	},
};
