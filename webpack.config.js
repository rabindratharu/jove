/**
 * Webpack configuration file.
 *
 * @author    Justin Tadlock <justintadlock@gmail.com>
 * @copyright Copyright (c) 2023-2024, Justin Tadlock
 * @license   GPL-3.0-or-later
 */

// WordPress webpack config.
const defaultConfig = require("@wordpress/scripts/config/webpack.config");

// Plugins.
const RemoveEmptyScriptsPlugin = require("webpack-remove-empty-scripts");
const CopyPlugin = require("copy-webpack-plugin");
const RtlCssPlugin = require("rtlcss-webpack-plugin");
const CssMinimizerPlugin = require("css-minimizer-webpack-plugin");

// Utilities.
const path = require("path");
const { globSync } = require("glob");

/**
 * Processes individual block stylesheets for a specific block namespace. These
 * are not imported into the primary stylesheets and are enqueued separately.
 *
 * @since  1.0.0
 * @param  {string} namespace
 * @return {Object.<string, string>}
 */
const blockStylesheets = (namespace) => {
	return globSync(`./resources/css/${namespace}/*.css`).reduce(
		(files, filepath) => {
			const name = path.parse(filepath).name;

			files[`css/${namespace}/${name}`] = path.resolve(
				process.cwd(),
				`resources/css/${namespace}`,
				`${name}.css`,
			);

			return files;
		},
		{},
	);
};

/**
 * Exports the custom webpack config.
 *
 * @since 1.0.0
 */
module.exports = {
	// Includes the default webpack config from WordPress.
	...defaultConfig,
	...{
		entry: {
			...blockStylesheets("core"),

			"js/public": path.resolve(
				process.cwd(),
				"resources/js",
				"public.js",
			),
			"js/search": path.resolve(
				process.cwd(),
				"resources/js",
				"search.js",
			),

			"js/popup": path.resolve(process.cwd(), "resources/js", "popup.js"),

			"js/notice": path.resolve(
				process.cwd(),
				"resources/js",
				"notice.js",
			),
			"js/share": path.resolve(process.cwd(), "resources/js", "share.js"),

			"css/public": path.resolve(
				process.cwd(),
				"resources/css",
				"public.css",
			),
			"css/search": path.resolve(
				process.cwd(),
				"resources/css",
				"search.css",
			),
			"css/filter": path.resolve(
				process.cwd(),
				"resources/css",
				"filter.css",
			),
			"css/popup": path.resolve(
				process.cwd(),
				"resources/css",
				"popup.css",
			),
			"css/hero": path.resolve(
				process.cwd(),
				"resources/css",
				"hero.css",
			),
			"css/divider": path.resolve(
				process.cwd(),
				"resources/css",
				"divider.css",
			),
			"css/notice": path.resolve(
				process.cwd(),
				"resources/css",
				"notice.css",
			),
			"css/experiment": path.resolve(
				process.cwd(),
				"resources/css",
				"experiment.css",
			),
			"css/video": path.resolve(
				process.cwd(),
				"resources/css",
				"video.css",
			),
			"css/abstract": path.resolve(
				process.cwd(),
				"resources/css",
				"abstract.css",
			),
			"css/affiliations": path.resolve(
				process.cwd(),
				"resources/css",
				"affiliations.css",
			),
		},
		optimization: {
			...defaultConfig.optimization,
			minimizer: [
				...defaultConfig.optimization.minimizer,
				new CssMinimizerPlugin(),
			],
		},
		plugins: [
			// Very important! Include WP's plugin config or the
			// world will cease to exist as we know it. This also
			// removes the RTL handling for the moment, but it
			// should be re-added at a later date.
			...defaultConfig.plugins.filter(
				(filter) => !(filter instanceof RtlCssPlugin),
			),

			// Removes the empty `.js` files generated by webpack.
			// For this to work correctly, it needs to run after
			// WP has generated its the `*.asset.php` files. This is
			// what `STAGE_AFTER_PROCESS_PLUGINS` allows.
			new RemoveEmptyScriptsPlugin({
				stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS,
			}),

			// Copies any assets that don't need to be processed to
			// the output folder.
			new CopyPlugin({
				patterns: [
					{
						from: "./resources/fonts",
						to: "./fonts",
					},
					{
						from: "./resources/media",
						to: "./media",
					},
				],
			}),
			// Add RtlCssPlugin to generate RTL stylesheets.
			new RtlCssPlugin({
				// Customize the suffix for the RTL stylesheets.
				filename: "[name]-rtl.css",
			}),
		],
	},
	performance: {
		maxAssetSize: 512000,
	},
};
